# Generated by Django 5.1.4 on 2025-05-23 06:25

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Building",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="建筑名称")),
                ("code", models.CharField(max_length=50, unique=True, verbose_name="建筑编码")),
                ("description", models.TextField(blank=True, null=True, verbose_name="建筑描述")),
                ("create_time", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
            ],
            options={
                "verbose_name": "建筑",
                "verbose_name_plural": "建筑管理",
            },
        ),
        migrations.CreateModel(
            name="Company",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="公司名称")),
                ("code", models.CharField(max_length=50, unique=True, verbose_name="公司编码")),
                ("description", models.TextField(blank=True, null=True, verbose_name="公司描述")),
                ("create_time", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
            ],
            options={
                "verbose_name": "公司",
                "verbose_name_plural": "公司管理",
            },
        ),
        migrations.CreateModel(
            name="Department",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="部门名称")),
                ("code", models.CharField(max_length=50, verbose_name="部门编码")),
                ("description", models.TextField(blank=True, null=True, verbose_name="部门描述")),
                ("create_time", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("company", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="departments", to="device.company", verbose_name="所属公司")),
            ],
            options={
                "verbose_name": "部门",
                "verbose_name_plural": "部门管理",
            },
        ),
        migrations.CreateModel(
            name="Floor",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=50, verbose_name="楼层名称")),
                ("floor_number", models.IntegerField(verbose_name="楼层号")),
                ("description", models.TextField(blank=True, null=True, verbose_name="楼层描述")),
                ("create_time", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("building", models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name="floors", to="device.building", verbose_name="所属建筑")),
            ],
            options={
                "verbose_name": "楼层",
                "verbose_name_plural": "楼层管理",
                "ordering": ["building", "floor_number"],
            },
        ),
        migrations.CreateModel(
            name="Topic",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("uuid", models.CharField(max_length=100, unique=True, verbose_name="UUID")),
                ("subscribe_topic", models.CharField(db_index=True, max_length=255, verbose_name="订阅Topic路径")),
                ("publish_topic", models.CharField(db_index=True, max_length=255, verbose_name="发布Topic路径")),
                ("description", models.TextField(blank=True, null=True, verbose_name="描述")),
                ("created_at", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("updated_at", models.DateTimeField(auto_now=True, verbose_name="更新时间")),
            ],
            options={
                "verbose_name": "MQTT Topic",
                "verbose_name_plural": "MQTT Topic",
                "db_table": "device_mqtt_topic",
            },
        ),
        migrations.CreateModel(
            name="Device",
            fields=[
                ("id", models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name="ID")),
                ("name", models.CharField(max_length=100, verbose_name="设备名称")),
                ("device_id", models.CharField(db_index=True, max_length=100, verbose_name="设备ID")),
                ("room_id", models.IntegerField(verbose_name="房间ID")),
                ("current_temp", models.FloatField(default=25.0, verbose_name="当前温度")),
                ("set_temp", models.FloatField(default=25.0, verbose_name="设定温度")),
                ("status", models.CharField(choices=[("running", "运行"), ("stopped", "停止"), ("fault", "故障")], default="stopped", max_length=20, verbose_name="运行状态")),
                ("mode", models.CharField(choices=[("auto", "自动"), ("cooling", "制冷"), ("heating", "制热"), ("fan", "送风"), ("dehumidify", "除湿")], default="cooling", max_length=20, verbose_name="运行模式")),
                ("fan_speed", models.IntegerField(choices=[(0, "自动"), (1, "高速"), (2, "中速"), (4, "低速"), (6, "微风")], default=0, verbose_name="风速")),
                ("running_time", models.FloatField(default=0.0, verbose_name="运行时间(小时)")),
                ("last_updated", models.DateTimeField(auto_now=True, verbose_name="最后更新时间")),
                ("create_time", models.DateTimeField(auto_now_add=True, verbose_name="创建时间")),
                ("building", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name="devices", to="device.building", verbose_name="所属建筑")),
                ("company", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name="devices", to="device.company", verbose_name="所属公司")),
                ("department", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name="devices", to="device.department", verbose_name="所属部门")),
                ("floor", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name="devices", to="device.floor", verbose_name="所属楼层")),
                ("uuid", models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name="devices", to="device.topic", verbose_name="UUID")),
            ],
            options={
                "verbose_name": "设备",
                "verbose_name_plural": "设备管理",
            },
        ),
        migrations.AddIndex(
            model_name="topic",
            index=models.Index(fields=["subscribe_topic"], name="device_mqtt__subscri_823cf2_idx"),
        ),
        migrations.AddIndex(
            model_name="topic",
            index=models.Index(fields=["publish_topic"], name="device_mqtt__publish_d66106_idx"),
        ),
        migrations.AddConstraint(
            model_name="device",
            constraint=models.UniqueConstraint(fields=("device_id", "uuid"), name="device_uuid_unique_idx"),
        ),
    ] 